---
// src/components/Projects.astro
import { t } from "../i18n/index.js";
import proyectosData from "../data/proyectos.json";

const initialLang =
    typeof window !== "undefined"
        ? localStorage.getItem("preferredLang") || "es"
        : "es";

const { proyectos } = proyectosData;
---

<section id="projects" class="py-20 bg-black text-white">
    <div class="max-w-7xl mx-auto px-4">
        <!-- Header -->
        <div class="text-center mb-16">
            <h2 class="text-4xl md:text-5xl font-bold mb-4" data-i18n="projects.title">
                {t(initialLang, "projects.title")}
            </h2>
            <p class="text-xl text-gray-500 max-w-2xl mx-auto" data-i18n="projects.subtitle">
                {t(initialLang, "projects.subtitle")}
            </p>
        </div>

        <!-- Filtros de Categorías -->
        <div class="flex flex-wrap justify-center gap-4 mb-12">
            <button class="filter-btn active px-6 py-2 rounded-full bg-[#E64530] text-white transition-all duration-300 hover:scale-105" 
                    data-filter="all" 
                    data-i18n="projects.filters.all">
                {t(initialLang, "projects.filters.all")}
            </button>
            <button class="filter-btn px-6 py-2 rounded-full bg-gray-700 text-gray-300 transition-all duration-300 hover:scale-105 hover:bg-gray-600" 
                    data-filter="ai" 
                    data-i18n="projects.filters.ai">
                {t(initialLang, "projects.filters.ai")}
            </button>
            <button class="filter-btn px-6 py-2 rounded-full bg-gray-700 text-gray-300 transition-all duration-300 hover:scale-105 hover:bg-gray-600" 
                    data-filter="web" 
                    data-i18n="projects.filters.web">
                {t(initialLang, "projects.filters.web")}
            </button>
            <button class="filter-btn px-6 py-2 rounded-full bg-gray-700 text-gray-300 transition-all duration-300 hover:scale-105 hover:bg-gray-600" 
                    data-filter="hardware" 
                    data-i18n="projects.filters.hardware">
                {t(initialLang, "projects.filters.hardware")}
            </button>
            <button class="filter-btn px-6 py-2 rounded-full bg-gray-700 text-gray-300 transition-all duration-300 hover:scale-105 hover:bg-gray-600" 
                    data-filter="full" 
                    data-i18n="projects.filters.full">
                {t(initialLang, "projects.filters.full")}
            </button>
            <button class="filter-btn px-6 py-2 rounded-full bg-gray-700 text-gray-300 transition-all duration-300 hover:scale-105 hover:bg-gray-600" 
                    data-filter="control" 
                    data-i18n="projects.filters.control">
                {t(initialLang, "projects.filters.control")}
            </button>
        </div>

        <!-- Grid de Proyectos -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="projects-grid">
            {proyectos.map((proyecto) => (
                <div 
                    class="project-card group cursor-pointer transform transition-all duration-500"
                    data-category={proyecto.categoria.en.toLowerCase().replace(' ', '-')}
                    data-project-id={proyecto.id}
                >
                    <div class="bg-gray-800/40 rounded-2xl p-6 backdrop-blur-sm border border-gray-700 hover:border-[#E64530] transition-all duration-300 h-full flex flex-col">
                        <!-- Header del proyecto -->
                        <div class="flex items-start justify-between mb-4">
                            <div class={`w-14 h-14 bg-gradient-to-br ${proyecto.color} rounded-2xl flex items-center justify-center text-2xl text-white shadow-lg`}>
                                {proyecto.icono}
                            </div>
                            {proyecto.destacado && (
                                <span class="bg-[#E64530] text-white px-3 py-1 rounded-full text-xs font-medium"
                                    data-i18n="projects.featured">
                                    {t(initialLang, "projects.featured")}
                                </span>
                            )}
                        </div>

                        <!-- Información del proyecto -->
                        <h3 class="text-xl font-bold text-white mb-2 project-title" data-project-id={proyecto.id}>
                            {typeof proyecto.titulo === 'object' ? proyecto.titulo[initialLang] : proyecto.titulo}
                        </h3>
                        
                        <div class="flex items-center gap-2 mb-3">
                            <span class={`px-3 py-1 rounded-full text-xs font-medium ${
                                proyecto.estado.es === 'Completado' 
                                    ? 'bg-green-500/20 text-green-400' 
                                    : 'bg-yellow-500/20 text-yellow-400'
                            }`}>
                                {proyecto.estado[initialLang]}
                            </span>
                            <span class="text-gray-500 text-sm">{proyecto.fecha}</span>
                        </div>

                        <p class="text-gray-500 text-sm mb-4 flex-grow project-description" data-project-id={proyecto.id}>
                            {proyecto.descripcion_corta[initialLang]}
                        </p>

                        <!-- Tecnologías -->
                        <div class="flex flex-wrap gap-2 mb-4">
                            {proyecto.tecnologias.slice(0, 3).map((tech) => (
                                <span class="bg-gray-700/50 text-gray-300 px-2 py-1 rounded text-xs border border-gray-600">
                                    {tech}
                                </span>
                            ))}
                            {proyecto.tecnologias.length > 3 && (
                                <span class="bg-gray-700/50 text-gray-500 px-2 py-1 rounded text-xs border border-gray-600">
                                    +{proyecto.tecnologias.length - 3}
                                </span>
                            )}
                        </div>

                        <!-- Botón de acción -->
                        <button 
                            class="view-project-btn w-full bg-gray-700 hover:bg-[#E64530] text-white py-2 px-4 rounded-lg transition-all duration-300 transform hover:scale-105 mt-auto"
                            data-project-id={proyecto.id}
                            data-i18n="projects.view_details">
                        >
                            {t(initialLang, "projects.view_details")}
                        </button>
                    </div>
                </div>
            ))}
        </div>

        <!-- Modal para detalles del proyecto -->
        <div id="project-modal" class="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 hidden items-center justify-center p-4">
            <div class="bg-gray-800 rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
                <div class="p-6">
                    <!-- Header del modal -->
                    <div class="flex justify-between items-start mb-6">
                        <h3 id="modal-title" class="text-2xl font-bold text-white"></h3>
                        <button id="close-modal" class="text-gray-500 hover:text-white transition-colors duration-200">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>

                    <!-- Contenido del modal -->
                    <div id="modal-content" class="space-y-4">
                        <!-- La información se carga dinámicamente aquí -->
                    </div>

                    <!-- Botones de acción -->
                    <div class="flex gap-4 mt-8">
                        <button id="modal-close-btn" 
                                class="flex-1 bg-gray-700 hover:bg-gray-600 text-white py-3 px-6 rounded-lg transition-all duration-300"
                                data-i18n="projects.modal.close">
                            {t(initialLang, "projects.modal.close")}
                        </button>
                        <button id="modal-view-btn" 
                                class="flex-1 bg-[#E64530] hover:bg-[#d63c28] text-white py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105"
                                data-i18n="projects.modal.view_project">
                            {t(initialLang, "projects.modal.view_project")}
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script is:inline>
    // Projects data para internacionalización
    const projectsData = {
        proyectos: [
            // LexIA
            {
                id: 1,
                titulo: {
                    es: "LexIA",
                    en: "LexIA",
                    zh: "LexIA"
                },
                categoria: {
                    es: "IA",
                    en: "AI",
                    zh: "人工智能"
                },
                descripcion_corta: {
                    es: "GPT integral para consultas y analisis legislativo",
                    en: "Comprehensive GPT for legislative consultations and analysis",
                    zh: "全面的GPT, 用于立法咨询和分析"
                },
                descripcion_larga: {
                    es: "GPT juridico para el analisis de textos, imagenes y documentos, permite realizar iniciativas de ley y comprender reformas para dar su opinion y fungir como asistente legislativo.",
                    en: "Legal GPT for the analysis of texts, images, and documents, allows you to draft legislative initiatives and understand reforms, provide your opinion, and serve as a legislative assistant.",
                    zh: "法律 GPT 用于分析文本、图像和文档，使您能够起草立法倡议并了解改革，提供您的意见并充当立法助理."
                },
                caracteristicas: {
                    es: ["Chat interactivo", "Reportes en tiempo real", "API RESTful", "Autenticación"],
                    en: ["Interactive chat", "Real-time reports", "RESTful API", "Authentication"],
                    zh: ["互动聊天", "实时报告", "RESTful API", "验证"]
                },
                estado: {
                    es: "Completado",
                    en: "Completed",
                    zh: "已完成"
                },
                enlace: "/proyectos/lexia"
            },
            // RL
            {
                id: 2,
                titulo: {
                    es: "Revista Legislatura",
                    en: "Legislature Magazine",
                    zh: "立法杂志"
                },
                categoria: {
                    es: "Desarrollo Web",
                    en: "Web Development",
                    zh: "Web 开发"
                },
                descripcion_corta: {
                    es: "Revista digital con registro de usuarios, editor de articulos en linea y visualizacion de revistas digitales",
                    en: "Digital magazine with user registration, online article editor, and digital magazine viewing",
                    zh: "具有用户注册、在线文章编辑器和数字杂志浏览功能的数字杂志"
                },
                descripcion_larga: {
                    es: "Aplicacion web desarrollada para generar articulos digitales y fungir como centro de analisis especializado a nivel juridico, con conectividad con la red social X, registro y administracion de usuarios con Firebase y difundir el quehacer legislativo en Mexico",
                    en: "Web application developed to generate digital articles and act as a specialized legal analysis center, with connectivity to the X social network, user registration and administration with Firebase, and to disseminate legislative work in Mexico.",
                    zh: "开发的 Web 应用程序用于生成数字文章并充当专门的法律分析中心，可连接到 X 社交网络、使用 Firebase 进行用户注册和管理，并传播墨西哥的立法工作."
                },
                caracteristicas: {
                    es: ["GPS en tiempo real", "Notificaciones push", "Múltiples métodos de pago", "Historial de pedidos"],
                    en: ["Real-time GPS", "Push notifications", "Multiple payment methods", "Order history"],
                    zh: ["实时GPS", "推送通知", "多种支付方式", "订单历史"]
                },
                estado: {
                    es: "Completado",
                    en: "Completed",
                    zh: "已完成"
                },
                enlace: "/proyectos/revista-legislatura"
            },
            // PC
            {
                id: 3,
                titulo: {
                    es: "Panel de Control para cabinas ergonomicas",
                    en: "Control Panel for ergonomic cabins",
                    zh: "符合人体工程学的驾驶室控制面板"
                },
                categoria: {
                    es: "Sistemas de Control",
                    en: "Control Systems",
                    zh: "控制系统"
                },
                descripcion_corta: {
                    es: "Panel de control para actuadores y sensores incorporados a dos cabinas ergonomicas para ingenieria industrial",
                    en: "Control panel for actuators and sensors built into two ergonomic cabinets for industrial engineering",
                    zh: "执行器和传感器的控制面板内置于两个符合人体工程学的工业工程柜中"
                },
                descripcion_larga: {
                    es: "Sistema de monitoreo y control de dos microcontroladores los cuales incorporan actuadores y sensores que permiten analizar el estres de usuarios.",
                    en: "Monitoring and control system with two microcontrollers incorporating actuators and sensors that allow for user stress analysis.",
                    zh: "监控和控制系统带有两个微控制器，包含执行器和传感器，可用于用户压力分析"
                },
                caracteristicas: {
                    es: ["Evaluaciones interactivas", "Generacion de reportes", "Analisis de video e imagenes"],
                    en: ["Interactive Assessments", "Report Generation", "Video and Image Analysis"],
                    zh: ["交互式评估", "报告生成", "视频和图像分析"]
                },
                estado: {
                    es: "Completado",
                    en: "Completed",
                    zh: "已完成"
                },
                enlace: "/proyectos/pc"
            },
            // ESphere
            {
                id: 4,
                titulo: {
                    es: "ErgoSphere",
                    en: "ErgoSphere",
                    zh: "ErgoSphere"
                },
                categoria: {
                    es: "Desarrollo Full Stack",
                    en: "Full Stack Development",
                    zh: "全栈开发"
                },
                descripcion_corta: {
                    es: "Aplicacion de escritorio de evaluacion de metodos ergonomicos",
                    en: "Desktop application for evaluating ergonomic methods",
                    zh: "用于评估人体工程学方法的桌面应用程序"
                },
                descripcion_larga: {
                    es: "Aplicacion de escritorio la cual permite realizar evaluaciones de diferentes metodos ergonomicos con normativas mundiales y mexicanas..",
                    en: "Desktop application that allows evaluations of different ergonomic methods with global and Mexican regulations.",
                    zh: "桌面应用程序可以根据全球和墨西哥法规评估不同的人体工程学方法."
                },
                caracteristicas: {
                    es: ["Evaluaciones interactivas", "Generacion de reportes", "Analisis de video e imagenes"],
                    en: ["Interactive Assessments", "Report Generation", "Video and Image Analysis"],
                    zh: ["交互式评估", "报告生成", "视频和图像分析"]
                },
                estado: {
                    es: "En desarrollo",
                    en: "In development",
                    zh: "视频和图像分析"
                },
                enlace: "/proyectos/ergosphere"
            },
            // GULU
            {
                id: 5,
                titulo: {
                    es: "GULU",
                    en: "GULU",
                    zh: "GULU"
                },
                categoria: {
                    es: "Desarrollo Electronico",
                    en: "Electronic Development",
                    zh: "电子开发"
                },
                descripcion_corta: {
                    es: "Sistema de adquisicion, procesamiento y analisis de datos biolectricos",
                    en: "Bioelectric data acquisition, processing and analysis system",
                    zh: "生物电数据采集、处理与分析系统"
                },
                descripcion_larga: {
                    es: "Sistema de adquisicion, procesamiento y analisis de senales bioelectricas (corazon), con despliegue en aplicacion mobil y web, con guardado de datos y autenticacion en Firebase.",
                    en: "Bioelectrical signal acquisition, processing, and analysis system (heart), with deployment in mobile and web applications, with data storage and authentication in Firebase.",
                    zh: "生物电信号采集、处理和分析系统（心脏），部署在移动和网络应用程序中，并在 Firebase 中进行数据存储和身份验证."
                },
                caracteristicas: {
                    es: ["Control en tiempo real", "App movil", "Monitoreo remoto", "Analisis predictivo"],
                    en: ["Real-time control", "Mobile app", "Remote monitoring", "Predictive analytics"],
                    zh: ["实时控制", "移动应用", "远程监控", "预测性维护"]
                },
                estado: {
                    es: "Completado",
                    en: "Completed",
                    zh: "已完成"
                },
                enlace: "/proyectos/gulu"
            },
            // C+SS
            {
                id: 6,
                titulo: {
                    es: "C+SS Bot",
                    en: "C+SS Bot",
                    zh: "C+SS 机器人"
                },
                categoria: {
                    es: "IA",
                    en: "AI",
                    zh: "人工智能"
                },
                descripcion_corta: {
                    es: "Bot automatizado y con inteligencia artificial para dar informacion sobre servicios",
                    en: "Automated and artificial intelligence bot to provide information about services",
                    zh: "自动化和人工智能机器人提供有关服务的信息"
                },
                descripcion_larga: {
                    es: "Desarrollo de un bot completamente automatizado y con incorporacion de la API de OpenAI, para poder dar informacion sobre servicios de seguridad social.",
                    en: "Development of a fully automated bot, incorporating the OpenAI API, to provide information on social security services.",
                    zh: "开发一个全自动机器人，结合 OpenAI API, 提供有关社会保障服务的信息."
                },
                caracteristicas: {
                    es: ["Machine Learning", "Tiempo real", "SaaS"],
                    en: ["Machine Learning", "Real-time", "SaaS"],
                    zh: ["机器学习", "实时", "软件即服务"]
                },
                estado: {
                    es: "Completado",
                    en: "Completed",
                    zh: "已完成"
                },
                enlace: "/proyectos/css-bot"
            }
        ]
    };

    // Projects functionality
    function initializeProjects() {
        const projectCards = document.querySelectorAll('.project-card, .view-project-btn');
        const filterButtons = document.querySelectorAll('.filter-btn');
        const modal = document.getElementById('project-modal');
        const closeModalBtn = document.getElementById('close-modal');
        const modalCloseBtn = document.getElementById('modal-close-btn');
        const modalViewBtn = document.getElementById('modal-view-btn');
        const modalTitle = document.getElementById('modal-title');
        const modalContent = document.getElementById('modal-content');
        
        let currentProject = null;

        // Filtrado de proyectos
        filterButtons.forEach(button => {
            button.addEventListener('click', () => {
                const filter = button.getAttribute('data-filter');
                
                // Actualizar botones activos
                filterButtons.forEach(btn => {
                    btn.classList.remove('active', 'bg-[#E64530]', 'text-white');
                    btn.classList.add('bg-gray-700', 'text-gray-300');
                });
                button.classList.add('active', 'bg-[#E64530]', 'text-white');
                button.classList.remove('bg-gray-700', 'text-gray-300');
                
                // Filtrar proyectos
                const projectCards = document.querySelectorAll('.project-card');
                projectCards.forEach(card => {
                    if (filter === 'all' || card.getAttribute('data-category') === filter) {
                        card.style.display = 'block';
                        setTimeout(() => {
                            card.style.opacity = '1';
                            card.style.transform = 'scale(1)';
                        }, 50);
                    } else {
                        card.style.opacity = '0';
                        card.style.transform = 'scale(0.8)';
                        setTimeout(() => {
                            card.style.display = 'none';
                        }, 300);
                    }
                });
            });
        });

        // Abrir modal al hacer clic en proyecto
        projectCards.forEach(card => {
            card.addEventListener('click', (e) => {
                e.stopPropagation();
                const projectId = parseInt(card.getAttribute('data-project-id'));
                openProjectModal(projectId);
            });
        });

        function openProjectModal(projectId) {
            const project = projectsData.proyectos.find(p => p.id === projectId);
            if (!project) return;
            
            currentProject = project;
            const currentLang = getCurrentLanguage();
            
            // Actualizar título - Asegúrate de obtener el string, no el objeto
            modalTitle.textContent = typeof project.titulo === 'object' 
                ? project.titulo[currentLang] 
                : project.titulo;
            
            // Construir contenido del modal CORREGIDO
            modalContent.innerHTML = `
                <div class="space-y-4">
                    <!-- Categoría y Estado -->
                    <div class="flex flex-wrap gap-4">
                        <span class="bg-blue-500/20 text-blue-400 px-3 py-1 rounded-full text-sm">
                            ${project.categoria[getCurrentLanguage()]}
                        </span>
                        <span class="${
                            project.estado.es === 'Completado' 
                                ? 'bg-green-500/20 text-green-400' 
                                : 'bg-yellow-500/20 text-yellow-400'
                        } px-3 py-1 rounded-full text-sm">
                            ${project.estado[getCurrentLanguage()]}
                        </span>
                    </div>
                    
                    <!-- Descripción larga -->
                    <div>
                        <h4 class="text-lg font-semibold text-white mb-2">${getTranslation('projects.modal.description')}</h4>
                        <p class="text-gray-300">${project.descripcion_larga[getCurrentLanguage()]}</p>
                    </div>
                    
                    <!-- Características -->
                    <div>
                        <h4 class="text-lg font-semibold text-white mb-2">${getTranslation('projects.modal.features')}</h4>
                        <ul class="grid grid-cols-1 md:grid-cols-2 gap-2">
                            ${project.caracteristicas[getCurrentLanguage()].map(feature => 
                                `<li class="flex items-center text-gray-300">
                                    <svg class="w-4 h-4 text-[#E64530] mr-2" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                    </svg>
                                    ${feature}
                                </li>`
                            ).join('')}
                        </ul>
                    </div>
                </div>
            `;
            
            // Actualizar enlace del botón
            modalViewBtn.onclick = () => {
                window.location.href = project.enlace;
            };
            
            // Mostrar modal
            modal.classList.remove('hidden');
            modal.classList.add('flex');
            document.body.style.overflow = 'hidden';
        }

        // Cerrar modal
        function closeModal() {
            modal.classList.add('hidden');
            modal.classList.remove('flex');
            document.body.style.overflow = 'auto';
            currentProject = null;
        }

        closeModalBtn.addEventListener('click', closeModal);
        modalCloseBtn.addEventListener('click', closeModal);
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                closeModal();
            }
        });

        // Cerrar con ESC
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
                closeModal();
            }
        });
    }

    // Helper functions
    function getCurrentLanguage() {
        return localStorage.getItem('preferredLang') || 'es';
    }

    function getTranslation(key) {
        const translations = {
            'es': {
                'projects.modal.description': 'Descripción',
                'projects.modal.features': 'Características Principales',
                'projects.modal.close': 'Cerrar',
                'projects.modal.view_project': 'Ver Proyecto Completo'
            },
            'en': {
                'projects.modal.description': 'Description',
                'projects.modal.features': 'Key Features',
                'projects.modal.close': 'Close',
                'projects.modal.view_project': 'View Full Project'
            },
            'zh': {
                'projects.modal.description': '描述',
                'projects.modal.features': '主要特点',
                'projects.modal.close': '关闭',
                'projects.modal.view_project': '查看完整项目'
            }
        };
        
        const lang = getCurrentLanguage();
        return translations[lang]?.[key] || key;
    }

    // Internationalization for projects section
    function updateProjectsTexts(lang) {
        const elements = document.querySelectorAll('[data-i18n]');
        const translations = {
            'es': {
                'projects.title': 'Proyectos Destacados',
                'projects.subtitle': 'Una selección de mis trabajos más recientes y relevantes',
                'projects.filters.all': 'Todos',
                'projects.filters.ai': 'IA',
                'projects.filters.web': 'Desarrollo Web',
                'projects.filters.hardware': 'Desarrollo Electronico',
                'projects.filters.full': 'Desarrollo Full Stack',
                'projects.filters.control': 'Sistemas de Control',
                'projects.featured': 'Destacado',
                'projects.view_details': 'Ver Detalles',
                'projects.modal.close': 'Cerrar',
                'projects.modal.view_project': 'Ver Proyecto Completo'
            },
            'en': {
                'projects.title': 'Featured Projects',
                'projects.subtitle': 'A selection of my most recent and relevant works',
                'projects.filters.all': 'All',
                'projects.filters.ai': 'AI',
                'projects.filters.web': 'Web Development', 
                'projects.filters.hardware': 'Electronic Development', 
                'projects.filters.full': 'Full Stack Development', 
                'projects.filters.control': 'Control Systems',
                'projects.featured': 'Featured',
                'projects.view_details': 'View Details',
                'projects.modal.close': 'Close',
                'projects.modal.view_project': 'View Full Project'
            },
            'zh': {
                'projects.title': '精选项目',
                'projects.subtitle': '我最近和相关工作的精选',
                'projects.filters.all': '全部',
                'projects.filters.ai': '人工智能',
                'projects.filters.web': '网站开发',
                'projects.filters.hardware': '电子开发',
                'projects.filters.full': '全栈开发', 
                'projects.filters.control': '控制系统',
                'projects.featured': '精选',
                'projects.view_details': '查看详情',
                'projects.modal.close': '关闭',
                'projects.modal.view_project': '查看完整项目'
            }
        };
        
        elements.forEach(element => {
            const key = element.getAttribute('data-i18n');
            if (translations[lang] && translations[lang][key]) {
                element.textContent = translations[lang][key];
            }
        });

        // Actualizar títulos de proyectos
        const projectTitles = document.querySelectorAll('.project-title');
        projectTitles.forEach(element => {
            const projectId = parseInt(element.getAttribute('data-project-id'));
            const project = projectsData.proyectos.find(p => p.id === projectId);
            if (project && project.titulo[lang]) {
                element.textContent = project.titulo[lang];
            }
        });

        // Actualizar descripciones de proyectos
        const projectDescriptions = document.querySelectorAll('.project-description');
        projectDescriptions.forEach(element => {
            const projectId = parseInt(element.getAttribute('data-project-id'));
            const project = projectsData.proyectos.find(p => p.id === projectId);
            if (project && project.descripcion_corta[lang]) {
                element.textContent = project.descripcion_corta[lang];
            }
        });
    }

    // Initialize when DOM is ready
    document.addEventListener('DOMContentLoaded', function() {
        initializeProjects();
        
        // Initialize texts with current language
        const currentLang = localStorage.getItem('preferredLang') || 'es';
        updateProjectsTexts(currentLang);
    });
    
    // Listen for language changes
    window.addEventListener('languageChanged', (e) => {
        updateProjectsTexts(e.detail.language);
    });
</script>

<style>
    .project-card {
        transition: all 0.3s ease;
    }
    
    .filter-btn.active {
        background-color: #E64530;
        color: white;
    }
    
    #project-modal {
        transition: opacity 0.3s ease;
    }
    
    /* Animaciones suaves */
    .project-card {
        opacity: 1;
        transform: scale(1);
        transition: all 0.3s ease;
    }
    
    .project-card.hidden {
        opacity: 0;
        transform: scale(0.8);
    }
    
    /* Scrollbar personalizado para modal */
    #project-modal > div {
        scrollbar-width: thin;
        scrollbar-color: #E64530 #1a1a1a;
    }
    
    #project-modal > div::-webkit-scrollbar {
        width: 8px;
    }
    
    #project-modal > div::-webkit-scrollbar-track {
        background: #1a1a1a;
        border-radius: 4px;
    }
    
    #project-modal > div::-webkit-scrollbar-thumb {
        background: #E64530;
        border-radius: 4px;
    }
</style>